{"version":3,"sources":["Radar/LexoRadar/maps/de_mirage/index.ts","Radar/LexoRadar/maps/de_mirage/radar.png","Radar/LexoRadar/maps/de_cache/index.ts","Radar/LexoRadar/maps/de_cache/radar.png","Radar/LexoRadar/maps/de_dust2/index.ts","Radar/LexoRadar/maps/de_dust2/radar.png","Radar/LexoRadar/maps/index.ts","Radar/LexoRadar/maps/de_inferno/index.ts","Radar/LexoRadar/maps/de_inferno/radar.png","Radar/LexoRadar/maps/de_train/index.ts","Radar/LexoRadar/maps/de_train/radar.png","Radar/LexoRadar/maps/de_overpass/index.ts","Radar/LexoRadar/maps/de_overpass/radar.png","Radar/LexoRadar/maps/de_nuke/index.ts","Radar/LexoRadar/maps/de_nuke/radar.png","Radar/LexoRadar/maps/de_vertigo/index.ts","Radar/LexoRadar/maps/de_vertigo/radar.png","Radar/LexoRadar/config.ts","Radar/LexoRadar/LexoRadar.tsx","Radar/LexoRadar/LexoRadarContainer.tsx","App.tsx","index.tsx"],"names":["config","maps","de_mirage","de_cache","de_inferno","de_dust2","de_train","de_overpass","de_nuke","configs","id","isVisible","height","file","de_vertigo","playerSize","App","props","renderGrenade","grenade","className","type","state","visible","style","transform","position","renderDot","player","side","hasBomb","isActive","isAlive","width","label","renderBomb","bomb","mapConfig","parsePosition","split","map","pos","Number","players","grenades","this","backgroundImage","mapName","React","Component","playersStates","grenadesStates","directions","calculateDirection","steamid","health","forward","forwardV1","forwardV2","direction","Math","asin","acos","axis","PI","axisA","axisB","abs","previous","modifier","floor","round","n","size","left","origin","x","pxPerUX","top","y","pxPerUY","parseGrenadePosition","getGrenadePosition","grenadeData","slice","filter","gr","pl","length","positions","grenadeEntry","posData","entryAmount","getPosition","playerData","playerEntry","mapPlayer","active","playerObject","undefined","observer_slot","team","Object","values","weapons","find","weapon","mapGrenade","extGrenade","keys","flames","flat","flame","grenadeObject","effecttime","lifetime","unshift","currentGrenades","grenadeId","entry","offset","GSI","CSGOGSI","window","ip","port","useState","gsi","setGSI","useEffect","on","data","LexoRadarContainer","name","substr","lastIndexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81bd487d.chunk.js","sourcesContent":["import radar from './radar.png'\r\n\r\nconst config = {\r\n    \"config\": {\r\n        \"origin\": {\r\n            \"x\": 645.7196725473384,\r\n            \"y\": 340.2921393569175\r\n        },\r\n        \"pxPerUX\": 0.20118507589946494,\r\n        \"pxPerUY\": -0.20138282875746794\r\n    },\r\n    \"file\": radar\r\n}\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/radar.58797a19.png\";","import radar from './radar.png'\r\n\r\nconst config = {\r\n    \"config\": {\r\n        \"origin\": {\r\n            \"x\": 361.7243823603619,\r\n            \"y\": 579.553558767951\r\n        },\r\n        \"pxPerUX\": 0.1830927328891829,\r\n        \"pxPerUY\": -0.17650705879909936\r\n    },\r\n    \"file\":radar\r\n}\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/radar.95546d85.png\";","import radar from './radar.png'\r\n\r\nconst config = {\r\n    \"config\": {\r\n        \"origin\": {\r\n            \"x\": 563.1339320329055,\r\n            \"y\": 736.9535330430065\r\n        },\r\n        \"pxPerUX\": 0.2278315639654376,\r\n        \"pxPerUY\": -0.22776482548619972\r\n    },\r\n    \"file\":radar\r\n}\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/radar.396736ab.png\";","import de_mirage from './de_mirage';\r\nimport de_cache from './de_cache';\r\nimport de_dust2 from './de_dust2';\r\nimport de_inferno from './de_inferno';\r\nimport de_train from './de_train';\r\nimport de_overpass from './de_overpass';\r\nimport de_nuke from './de_nuke';\r\nimport de_vertigo from './de_vertigo';\r\n\r\nexport interface ScaleConfig {\r\n    origin: {\r\n        x:number,\r\n        y:number\r\n    },\r\n    pxPerUX: number,\r\n    pxPerUY: number\r\n}\r\n\r\ninterface SingleLayer {\r\n    config: ScaleConfig,\r\n    file: string\r\n}\r\n\r\ninterface DoubleLayer {\r\n    configs: {\r\n        id: string,\r\n        config: ScaleConfig,\r\n        isVisible: (height: number) => boolean\r\n    }[],\r\n    file: string\r\n}\r\n\r\nexport type MapConfig = SingleLayer | DoubleLayer;\r\n\r\nconst maps: { [key: string] : MapConfig} = {\r\n    de_mirage,\r\n    de_cache,\r\n    de_inferno,\r\n    de_dust2,\r\n    de_train,\r\n    de_overpass,\r\n    de_nuke,\r\n    de_vertigo\r\n}\r\n\r\nexport default maps;","import radar from './radar.png'\r\n\r\nconst config = {\r\n    \"config\": {\r\n        \"origin\": {\r\n            \"x\": 426.51386123945593,\r\n            \"y\": 790.7266981544722\r\n        },\r\n        \"pxPerUX\": 0.2041685571162696,\r\n        \"pxPerUY\": -0.20465735943851654\r\n    },\r\n    \"file\":radar\r\n}\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/radar.190d2444.png\";","import radar from './radar.png'\r\n\r\nconst config = {\r\n    \"config\": {\r\n        \"origin\": {\r\n            \"x\": 527.365542903922,\r\n            \"y\": 511.81469648562296\r\n        },\r\n        \"pxPerUX\": 0.21532584158170223,\r\n        \"pxPerUY\": -0.21299254526091588\r\n    },\r\n    \"file\":radar\r\n}\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/radar.ebed5584.png\";","import radar from './radar.png'\r\n\r\nconst config = {\r\n    \"config\": {\r\n        \"origin\": {\r\n            \"x\": 927.3988878244819,\r\n            \"y\": 343.8221009185496\r\n        },\r\n        \"pxPerUX\": 0.1923720959212443,\r\n        \"pxPerUY\": -0.19427507725530338\r\n    },\r\n    \"file\":radar\r\n}\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/radar.674afdb6.png\";","import radar from './radar.png'\r\n\r\nconst high = {\r\n    \"origin\": {\r\n        \"x\": 473.1284773048749,\r\n        \"y\": 165.7329003801045\r\n    },\r\n    \"pxPerUX\": 0.14376095926926907,\r\n    \"pxPerUY\": -0.14736670935219626\r\n};\r\n\r\nconst low = {\r\n    \"origin\": {\r\n        \"x\": 473.66746071612374,\r\n        \"y\": 638.302101754172\r\n    },\r\n    \"pxPerUX\": 0.1436068746398272,\r\n    \"pxPerUY\": -0.14533406508526941\r\n};\r\n\r\nconst config = {\r\n    configs: [\r\n        {\r\n            id: 'high',\r\n            config: high,\r\n            isVisible: (height: number) => height >= -450,\r\n        },\r\n        {\r\n            id: 'low',\r\n            config: low,\r\n            isVisible: (height: number) => height < -450,\r\n        },\r\n    ],\r\n    file: radar\r\n}\r\n\r\nexport default config;","export default __webpack_public_path__ + \"static/media/radar.031ee00e.png\";","import radar from './radar.png'\r\n\r\nconst high = {\r\n    \"origin\": {\r\n        \"x\": 784.4793452283254,\r\n        \"y\": 255.42597837029027\r\n    },\r\n    \"pxPerUX\": 0.19856123172015677,\r\n    \"pxPerUY\": -0.19820052722907044\r\n};\r\n\r\nconst low = {\r\n    \"origin\": {\r\n        \"x\": 780.5145858437052,\r\n        \"y\": 695.4259783702903\r\n    },\r\n    \"pxPerUX\": 0.1989615567841087,\r\n    \"pxPerUY\": -0.19820052722907044\r\n};\r\n\r\nconst config = {\r\n    configs: [\r\n        {\r\n            id: 'high',\r\n            config: high,\r\n            isVisible: (height: number) => height >= 11700,\r\n        },\r\n        {\r\n            id: 'low',\r\n            config: low,\r\n            isVisible: (height: number) => height < 11700,\r\n        },\r\n    ],\r\n    file: radar\r\n}\r\n\r\nexport default config;\r\n/*\r\nimport radar from './radar.png'\r\n\r\nexport default {\r\n    \"config\": {\r\n        \"origin\": {\r\n            \"x\": 971.5536135341899,\r\n            \"y\": 424.5618319055844\r\n        },\r\n        \"pxPerUX\": 0.34708183044632246,\r\n        \"pxPerUY\": -0.3450882697407333\r\n    },\r\n    \"file\":radar\r\n}*/","export default __webpack_public_path__ + \"static/media/radar.0a8f930f.png\";","const config = {\r\n    playerSize: 50,\r\n}\r\n\r\nexport default config;","import React from 'react';\r\nimport { Bomb } from 'csgogsi-socket';\r\nimport maps, { ScaleConfig, MapConfig } from './maps';\r\nimport './index.css';\r\nimport { RadarPlayerObject, RadarGrenadeObject } from './interface';\r\nimport config from './config';\r\ninterface IProps {\r\n  players: RadarPlayerObject[];\r\n  grenades: RadarGrenadeObject[];\r\n  bomb?: Bomb | null;\r\n  mapName: string;\r\n  mapConfig: MapConfig,\r\n  parsePosition: (position: number[], size: number, config: ScaleConfig) => number[]\r\n}\r\nclass App extends React.Component<IProps> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      players: [],\r\n      grenades: [],\r\n      bomb: null\r\n    }\r\n  }\r\n\r\n  renderGrenade = (grenade: RadarGrenadeObject) => {\r\n    if (\"flames\" in grenade) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div key={grenade.id} className={`grenade ${grenade.type} ${grenade.state} ${grenade.visible ? 'visible':'hidden'}`}\r\n        style={{\r\n          transform: `translateX(${grenade.position[0]}px) translateY(${grenade.position[1]}px)`,\r\n        }}>\r\n          <div className=\"explode-point\"></div>\r\n          <div className=\"background\"></div>\r\n      </div>\r\n    )\r\n  }\r\n  renderDot = (player: RadarPlayerObject) => {\r\n    return (\r\n      <div key={player.id}\r\n        className={`player ${player.side} ${player.hasBomb ? 'hasBomb':''} ${player.isActive ? 'active' : ''} ${!player.isAlive ? 'dead' : ''} ${player.visible ? 'visible':'hidden'}`}\r\n        style={{\r\n          transform: `translateX(${player.position[0]}px) translateY(${player.position[1]}px)`,\r\n          width: config.playerSize,\r\n          height: config.playerSize,\r\n        }}>\r\n        <div className=\"background\" style={{ transform: `rotate(${45 + player.position[2]}deg)` }}></div>\r\n        <div className=\"label\">{player.label}</div>\r\n      </div>\r\n    )\r\n  }\r\n  renderBomb = () => {\r\n    const { bomb, mapConfig } = this.props;\r\n    if(!bomb) return null;\r\n    if(bomb.state === \"carried\" || bomb.state === \"planting\") return null;\r\n    if(\"config\" in mapConfig){\r\n      const position = this.props.parsePosition(bomb.position.split(\", \").map(pos => Number(pos)), 30, mapConfig.config);\r\n      if(!position) return null;\r\n      \r\n      return (\r\n        <div className={`bomb ${bomb.state} visible`}\r\n          style={{\r\n            transform: `translateX(${position[0]}px) translateY(${position[1]}px)`\r\n          }}>\r\n          <div className=\"explode-point\"></div>\r\n          <div className=\"background\"></div>\r\n        </div>\r\n      )\r\n    }\r\n    return mapConfig.configs.map(config => {\r\n      const position = this.props.parsePosition(bomb.position.split(\", \").map(pos => Number(pos)), 30, config.config);\r\n      if(!position) return null;\r\n      return (\r\n        <div className={`bomb ${bomb.state} ${config.isVisible(bomb.position.split(\", \").map(Number)[2]) ? 'visible':'hidden'}`}\r\n          style={{\r\n            transform: `translateX(${position[0]}px) translateY(${position[1]}px)`\r\n          }}>\r\n          <div className=\"explode-point\"></div>\r\n          <div className=\"background\"></div>\r\n        </div>\r\n      )\r\n    });\r\n  }\r\n  render() {\r\n    const { players, grenades } = this.props;\r\n    //if(players.length === 0) return null;\r\n    return <div className=\"map\" style={{ backgroundImage: `url(${maps[this.props.mapName].file})` }}>\r\n        {players.map(this.renderDot)}\r\n        {grenades.map(this.renderGrenade)}\r\n        {this.renderBomb()}\r\n      </div>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Player, Bomb } from 'csgogsi-socket';\r\nimport maps, { ScaleConfig } from './maps';\r\nimport LexoRadar from './LexoRadar';\r\nimport { ExtendedGrenade, Grenade, RadarPlayerObject, RadarGrenadeObject } from './interface';\r\nimport config from './config';\r\n\r\nlet playersStates: Player[][] = [];\r\nlet grenadesStates: ExtendedGrenade[][] = [];\r\nconst directions: { [key: string]: number } = {};\r\n\r\nconst calculateDirection = (player: Player) => {\r\n    if (directions[player.steamid] && !player.state.health) return directions[player.steamid];\r\n\r\n    const [forwardV1, forwardV2] = player.forward;\r\n    let direction = 0;\r\n\r\n    const [axisA, axisB] = [Math.asin(forwardV1), Math.acos(forwardV2)].map(axis => axis * 180 / Math.PI);\r\n\r\n    if (axisB < 45) {\r\n        direction = Math.abs(axisA);\r\n    } else if (axisB > 135) {\r\n        direction = 180 - Math.abs(axisA);\r\n    } else {\r\n        direction = axisB;\r\n    }\r\n\r\n    if (axisA < 0) {\r\n        direction = -(direction -= 360);\r\n    }\r\n\r\n    if (!directions[player.steamid]) {\r\n        directions[player.steamid] = direction;\r\n    }\r\n\r\n    const previous = directions[player.steamid];\r\n\r\n    let modifier = previous;\r\n    modifier -= 360 * Math.floor(previous / 360);\r\n    modifier = -(modifier -= direction);\r\n\r\n    if (Math.abs(modifier) > 180) {\r\n        modifier -= 360 * Math.abs(modifier) / modifier;\r\n    }\r\n    directions[player.steamid] += modifier;\r\n\r\n    return directions[player.steamid];\r\n}\r\n\r\ninterface IProps {\r\n    players: Player[],\r\n    bomb?: Bomb | null,\r\n    player: Player | null,\r\n    grenades?: any\r\n    size?: number,\r\n    mapName: string\r\n}\r\n\r\nclass App extends React.Component<IProps> {\r\n    round = (n: number) => {\r\n        const r = 0.02;\r\n        return Math.round(n / r) * r;\r\n    }\r\n\r\n    parsePosition = (position: number[], size: number, config: ScaleConfig) => {\r\n        if (!(this.props.mapName in maps)) {\r\n            return [0, 0];\r\n        }\r\n        const left = config.origin.x + (position[0] * config.pxPerUX) - (size / 2);\r\n        const top = config.origin.y + (position[1] * config.pxPerUY) - (size / 2);\r\n\r\n        return [this.round(left), this.round(top)];\r\n    }\r\n\r\n    parseGrenadePosition = (grenade: ExtendedGrenade, config: ScaleConfig) => {\r\n        if (!(\"position\" in grenade)) {\r\n            return null;\r\n        }\r\n        let size = 30;\r\n        if (grenade.type === \"smoke\") {\r\n            size = 40;\r\n        }\r\n        return this.parsePosition(grenade.position.split(\", \").map(pos => Number(pos)), size, config);\r\n    }\r\n    getGrenadePosition = (grenade: ExtendedGrenade, config: ScaleConfig) => {\r\n        const grenadeData = grenadesStates.slice(0, 5).map(grenades => grenades.filter(gr => gr.id === grenade.id)[0]).filter(pl => !!pl);\r\n        if (grenadeData.length === 0) return null;\r\n        const positions = grenadeData.map(grenadeEntry => this.parseGrenadePosition(grenadeEntry, config)).filter(posData => posData !== null) as number[][];\r\n        if (positions.length === 0) return null;\r\n        const entryAmount = positions.length;\r\n        let x = 0;\r\n        let y = 0;\r\n        for (const position of positions) {\r\n            x += position[0];\r\n            y += position[1];\r\n        }\r\n\r\n        return [x / entryAmount, y / entryAmount];\r\n    }\r\n    getPosition = (player: Player, mapConfig: ScaleConfig) => {\r\n        const playerData = playersStates.slice(0, 5).map(players => players.filter(pl => pl.steamid === player.steamid)[0]).filter(pl => !!pl);\r\n        if (playerData.length === 0) return [0, 0];\r\n        const positions = playerData.map(playerEntry => this.parsePosition(playerEntry.position, config.playerSize, mapConfig));\r\n        const entryAmount = positions.length;\r\n        let x = 0;\r\n        let y = 0;\r\n        for (const position of positions) {\r\n            x += position[0];\r\n            y += position[1];\r\n        }\r\n\r\n        const degree = calculateDirection(player);\r\n        return [x / entryAmount, y / entryAmount, degree];\r\n    }\r\n    mapPlayer = (active: Player | null) => (player: Player): RadarPlayerObject | RadarPlayerObject[] | null => {\r\n        if (!(this.props.mapName in maps)) {\r\n            return null;\r\n        }\r\n        const map = maps[this.props.mapName];\r\n        const playerObject: RadarPlayerObject = {\r\n            id: player.steamid,\r\n            label: player.observer_slot !== undefined ? player.observer_slot : \"\",\r\n            side: player.team.side,\r\n            position: [],\r\n            visible: true,\r\n            isActive: !!active && active.steamid === player.steamid,\r\n            forward: 0,\r\n            steamid: player.steamid,\r\n            isAlive: player.state.health > 0,\r\n            hasBomb: !!Object.values(player.weapons).find(weapon => weapon.type === \"C4\")\r\n        }\r\n        if (\"config\" in map) {\r\n            const position = this.getPosition(player, map.config);\r\n            playerObject.position = position;\r\n            return playerObject;\r\n        }\r\n        return map.configs.map(config => ({\r\n            ...playerObject,\r\n            position: this.getPosition(player, config.config),\r\n            id: `${player.steamid}_${config.id}`,\r\n            visible: config.isVisible(player.position[2])\r\n        }));\r\n    }\r\n    mapGrenade = (extGrenade: ExtendedGrenade) => {\r\n        if (!(this.props.mapName in maps)) {\r\n            return null;\r\n        }\r\n        const map = maps[this.props.mapName];\r\n        if (extGrenade.type === \"inferno\") {\r\n            const mapFlame = (id: string) => {\r\n                if (\"config\" in map) {\r\n                    return ({\r\n                        position: this.parsePosition(extGrenade.flames[id].split(\", \").map(pos => Number(pos)), 12, map.config),\r\n                        id: `${id}_${extGrenade.id}`,\r\n                        visible: true\r\n                    });\r\n                }\r\n                return map.configs.map(config => ({\r\n                    id: `${id}_${extGrenade.id}_${config.id}`,\r\n                    visible: config.isVisible(extGrenade.flames[id].split(\", \").map(Number)[2]),\r\n                    position: this.parsePosition(extGrenade.flames[id].split(\", \").map(pos => Number(pos)), 12, config.config)\r\n                }));\r\n            }\r\n            const flames = Object.keys(extGrenade.flames).map(mapFlame).flat();\r\n            const flameObjects: RadarGrenadeObject[] = flames.map(flame => ({\r\n                ...flame,\r\n                type: 'inferno',\r\n                state: 'landed'\r\n            }));\r\n            return flameObjects;\r\n        }\r\n\r\n        if (\"config\" in map) {\r\n            const position = this.getGrenadePosition(extGrenade, map.config);\r\n            if (!position) return null;\r\n            const grenadeObject: RadarGrenadeObject = {\r\n                type: extGrenade.type,\r\n                state: 'inair',\r\n                position,\r\n                id: extGrenade.id,\r\n                visible: true\r\n            }\r\n            if (extGrenade.type === \"smoke\") {\r\n                if (extGrenade.effecttime !== \"0.0\") {\r\n                    grenadeObject.state = \"landed\";\r\n                    if (Number(extGrenade.effecttime) >= 16.5) {\r\n                        grenadeObject.state = 'exploded';\r\n                    }\r\n                }\r\n            } else if (extGrenade.type === 'flashbang' || extGrenade.type === 'frag') {\r\n                if (Number(extGrenade.lifetime) >= 1.25) {\r\n                    grenadeObject.state = 'exploded';\r\n                }\r\n            }\r\n            return grenadeObject;\r\n        }\r\n        return map.configs.map(config => {\r\n            const position = this.getGrenadePosition(extGrenade, config.config);\r\n            if (!position) return null;\r\n            const grenadeObject: RadarGrenadeObject = {\r\n                type: extGrenade.type,\r\n                state: 'inair',\r\n                position,\r\n                id: `${extGrenade.id}_${config.id}`,\r\n                visible: config.isVisible(extGrenade.position.split(\", \").map(Number)[2])\r\n            }\r\n            if (extGrenade.type === \"smoke\") {\r\n                if (extGrenade.effecttime !== \"0.0\") {\r\n                    grenadeObject.state = \"landed\";\r\n                    if (Number(extGrenade.effecttime) >= 16.5) {\r\n                        grenadeObject.state = 'exploded';\r\n                    }\r\n                }\r\n            } else if (extGrenade.type === 'flashbang' || extGrenade.type === 'frag') {\r\n                if (Number(extGrenade.lifetime) >= 1.25) {\r\n                    grenadeObject.state = 'exploded';\r\n                }\r\n            }\r\n            return grenadeObject;\r\n        }).filter((grenade): grenade is RadarGrenadeObject => grenade !== null);\r\n\r\n    }\r\n    render() {\r\n        const players: RadarPlayerObject[] = this.props.players.map(this.mapPlayer(this.props.player)).filter((player): player is RadarPlayerObject => player !== null).flat();\r\n        playersStates.unshift(this.props.players);\r\n        if (playersStates.length > 5) {\r\n            playersStates = playersStates.slice(0, 5);\r\n        }\r\n        let grenades: RadarGrenadeObject[] = [];\r\n        const currentGrenades = Object.keys(this.props.grenades as { [key: string]: Grenade }).map(grenadeId => ({ ...this.props.grenades[grenadeId], id: grenadeId })) as ExtendedGrenade[];\r\n        if (currentGrenades) {\r\n            grenades = currentGrenades.map(this.mapGrenade).filter(entry => entry !== null).flat() as RadarGrenadeObject[];\r\n            grenadesStates.unshift(currentGrenades);\r\n        }\r\n        if (grenadesStates.length > 5) {\r\n            grenadesStates = grenadesStates.slice(0, 5);\r\n        }\r\n        const size = this.props.size || 300;\r\n        const offset = (size - (size * size / 1024)) / 2;\r\n        // s*(1024-s)/2048\r\n        if (!(this.props.mapName in maps)) {\r\n            return <div className=\"map-container\" style={{ width: size, height: size, transform: `scale(${size / 1024})`, top: -offset, left: -offset }}>\r\n                Unsupported map\r\n            </div>;\r\n        }\r\n        return <div className=\"map-container\" style={{ width: size, height: size, transform: `scale(${size / 1024})`, top: -offset, left: -offset }}>\r\n            <LexoRadar\r\n                players={players}\r\n                grenades={grenades}\r\n                parsePosition={this.parsePosition}\r\n                bomb={this.props.bomb}\r\n                mapName={this.props.mapName}\r\n                mapConfig={maps[this.props.mapName]}\r\n            />\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, { useEffect, useState } from 'react';\nimport CSGOGSI, { CSGO } from 'csgogsi-socket';\nimport './App.css';\nimport LexoRadarContainer from './Radar/LexoRadar/LexoRadarContainer';\ndeclare var window: any;\n\nconst { GSI } = CSGOGSI(`http://${window.ip}:${window.port}`, \"update\");\n\n\nfunction App() {\n  const [ gsi, setGSI] = useState<CSGO | null>(null);\n  useEffect(() => {\n    GSI.on(\"data\", data => {\n      setGSI(data);\n    });\n  }, []);\n  if(!gsi) return null;\n  \n  return (\n    <div className=\"custom-radar-external\">\n      <LexoRadarContainer\n        player={gsi.player}\n        players={gsi.players}\n        bomb={gsi.bomb}\n        grenades={gsi.grenades}\n        size={350}\n        mapName={gsi.map.name.substr(gsi.map.name.lastIndexOf('/')+1)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('custom-radar-external-container')\n);\n\n"],"sourceRoot":""}